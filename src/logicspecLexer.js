// Generated from logicspec.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001b\u00bd\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0005\u000b[\n\u000b\u0003\f\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0005\re\n\r\u0007\rg\n\r",
    "\f\r\u000e\rj\u000b\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000ft\n\u000f",
    "\u0007\u000fv\n\u000f\f\u000f\u000e\u000fy\u000b\u000f\u0003\u0010\u0006",
    "\u0010|\n\u0010\r\u0010\u000e\u0010}\u0003\u0011\u0003\u0011\u0003\u0012",
    "\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0005\u0013\u008f\n\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0005\u0014\u0096\n\u0014\u0003\u0015\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0005\u0015\u00a0\n\u0015\u0003\u0016\u0003\u0016\u0003\u0017\u0003",
    "\u0017\u0003\u0018\u0007\u0018\u00a7\n\u0018\f\u0018\u000e\u0018\u00aa",
    "\u000b\u0018\u0003\u0018\u0003\u0018\u0003\u0019\u0006\u0019\u00af\n",
    "\u0019\r\u0019\u000e\u0019\u00b0\u0003\u0019\u0003\u0019\u0003\u001a",
    "\u0003\u001a\u0007\u001a\u00b7\n\u001a\f\u001a\u000e\u001a\u00ba\u000b",
    "\u001a\u0003\u001a\u0003\u001a\u0002\u0002\u001b\u0003\u0003\u0005\u0004",
    "\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015",
    "\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013",
    "%\u0014\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b\u0003\u0002",
    "\f\u0006\u0002\f\f\u000f\u000f$$^^\u0006\u0002\f\f\u000f\u000f))^^\u0003",
    "\u00022;\u0004\u0002>>@@\u0004\u0002--//\u0005\u0002,,11``\u0005\u0002",
    "C\\aac|\u0004\u0002C\\c|\f\u0002\u000b\u000f\"\"\u0087\u0087\u00a2\u00a2",
    "\u1682\u1682\u2002\u200c\u202a\u202b\u2031\u2031\u2061\u2061\u3002\u3002",
    "\u0004\u0002\f\f\u000f\u000f\u0002\u00cd\u0002\u0003\u0003\u0002\u0002",
    "\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002",
    "\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002",
    "\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002",
    "\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002",
    "\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002",
    "\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002",
    "\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002",
    "\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002",
    "\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002",
    ")\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003",
    "\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002",
    "\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00035\u0003\u0002\u0002",
    "\u0002\u00057\u0003\u0002\u0002\u0002\u00079\u0003\u0002\u0002\u0002",
    "\t=\u0003\u0002\u0002\u0002\u000b?\u0003\u0002\u0002\u0002\rA\u0003",
    "\u0002\u0002\u0002\u000fI\u0003\u0002\u0002\u0002\u0011M\u0003\u0002",
    "\u0002\u0002\u0013Q\u0003\u0002\u0002\u0002\u0015Z\u0003\u0002\u0002",
    "\u0002\u0017\\\u0003\u0002\u0002\u0002\u0019_\u0003\u0002\u0002\u0002",
    "\u001bk\u0003\u0002\u0002\u0002\u001dn\u0003\u0002\u0002\u0002\u001f",
    "{\u0003\u0002\u0002\u0002!\u007f\u0003\u0002\u0002\u0002#\u0081\u0003",
    "\u0002\u0002\u0002%\u008e\u0003\u0002\u0002\u0002\'\u0095\u0003\u0002",
    "\u0002\u0002)\u009f\u0003\u0002\u0002\u0002+\u00a1\u0003\u0002\u0002",
    "\u0002-\u00a3\u0003\u0002\u0002\u0002/\u00a8\u0003\u0002\u0002\u0002",
    "1\u00ae\u0003\u0002\u0002\u00023\u00b4\u0003\u0002\u0002\u000256\u0007",
    "*\u0002\u00026\u0004\u0003\u0002\u0002\u000278\u0007+\u0002\u00028\u0006",
    "\u0003\u0002\u0002\u00029:\u0007?\u0002\u0002:;\u0007?\u0002\u0002;",
    "<\u0007?\u0002\u0002<\b\u0003\u0002\u0002\u0002=>\u0007.\u0002\u0002",
    ">\n\u0003\u0002\u0002\u0002?@\u0007a\u0002\u0002@\f\u0003\u0002\u0002",
    "\u0002AB\u0007k\u0002\u0002BC\u0007o\u0002\u0002CD\u0007r\u0002\u0002",
    "DE\u0007n\u0002\u0002EF\u0007k\u0002\u0002FG\u0007g\u0002\u0002GH\u0007",
    "u\u0002\u0002H\u000e\u0003\u0002\u0002\u0002IJ\u0007h\u0002\u0002JK",
    "\u0007q\u0002\u0002KL\u0007t\u0002\u0002L\u0010\u0003\u0002\u0002\u0002",
    "MN\u0007c\u0002\u0002NO\u0007n\u0002\u0002OP\u0007n\u0002\u0002P\u0012",
    "\u0003\u0002\u0002\u0002QR\u0007g\u0002\u0002RS\u0007z\u0002\u0002S",
    "T\u0007k\u0002\u0002TU\u0007u\u0002\u0002UV\u0007v\u0002\u0002VW\u0007",
    "u\u0002\u0002W\u0014\u0003\u0002\u0002\u0002X[\u0005\u0017\f\u0002Y",
    "[\u0005\u001b\u000e\u0002ZX\u0003\u0002\u0002\u0002ZY\u0003\u0002\u0002",
    "\u0002[\u0016\u0003\u0002\u0002\u0002\\]\u0005\u0019\r\u0002]^\u0007",
    "$\u0002\u0002^\u0018\u0003\u0002\u0002\u0002_h\u0007$\u0002\u0002`g",
    "\n\u0002\u0002\u0002ad\u0007^\u0002\u0002be\u000b\u0002\u0002\u0002",
    "ce\u0007\u0002\u0002\u0003db\u0003\u0002\u0002\u0002dc\u0003\u0002\u0002",
    "\u0002eg\u0003\u0002\u0002\u0002f`\u0003\u0002\u0002\u0002fa\u0003\u0002",
    "\u0002\u0002gj\u0003\u0002\u0002\u0002hf\u0003\u0002\u0002\u0002hi\u0003",
    "\u0002\u0002\u0002i\u001a\u0003\u0002\u0002\u0002jh\u0003\u0002\u0002",
    "\u0002kl\u0005\u001d\u000f\u0002lm\u0007)\u0002\u0002m\u001c\u0003\u0002",
    "\u0002\u0002nw\u0007)\u0002\u0002ov\n\u0003\u0002\u0002ps\u0007^\u0002",
    "\u0002qt\u000b\u0002\u0002\u0002rt\u0007\u0002\u0002\u0003sq\u0003\u0002",
    "\u0002\u0002sr\u0003\u0002\u0002\u0002tv\u0003\u0002\u0002\u0002uo\u0003",
    "\u0002\u0002\u0002up\u0003\u0002\u0002\u0002vy\u0003\u0002\u0002\u0002",
    "wu\u0003\u0002\u0002\u0002wx\u0003\u0002\u0002\u0002x\u001e\u0003\u0002",
    "\u0002\u0002yw\u0003\u0002\u0002\u0002z|\u0005!\u0011\u0002{z\u0003",
    "\u0002\u0002\u0002|}\u0003\u0002\u0002\u0002}{\u0003\u0002\u0002\u0002",
    "}~\u0003\u0002\u0002\u0002~ \u0003\u0002\u0002\u0002\u007f\u0080\t\u0004",
    "\u0002\u0002\u0080\"\u0003\u0002\u0002\u0002\u0081\u0082\u0007p\u0002",
    "\u0002\u0082\u0083\u0007q\u0002\u0002\u0083\u0084\u0007v\u0002\u0002",
    "\u0084$\u0003\u0002\u0002\u0002\u0085\u0086\u0007v\u0002\u0002\u0086",
    "\u0087\u0007t\u0002\u0002\u0087\u0088\u0007w\u0002\u0002\u0088\u008f",
    "\u0007g\u0002\u0002\u0089\u008a\u0007h\u0002\u0002\u008a\u008b\u0007",
    "c\u0002\u0002\u008b\u008c\u0007n\u0002\u0002\u008c\u008d\u0007u\u0002",
    "\u0002\u008d\u008f\u0007g\u0002\u0002\u008e\u0085\u0003\u0002\u0002",
    "\u0002\u008e\u0089\u0003\u0002\u0002\u0002\u008f&\u0003\u0002\u0002",
    "\u0002\u0090\u0091\u0007c\u0002\u0002\u0091\u0092\u0007p\u0002\u0002",
    "\u0092\u0096\u0007f\u0002\u0002\u0093\u0094\u0007q\u0002\u0002\u0094",
    "\u0096\u0007t\u0002\u0002\u0095\u0090\u0003\u0002\u0002\u0002\u0095",
    "\u0093\u0003\u0002\u0002\u0002\u0096(\u0003\u0002\u0002\u0002\u0097",
    "\u00a0\u0007?\u0002\u0002\u0098\u0099\u0007#\u0002\u0002\u0099\u00a0",
    "\u0007?\u0002\u0002\u009a\u009b\u0007>\u0002\u0002\u009b\u00a0\u0007",
    "?\u0002\u0002\u009c\u009d\u0007@\u0002\u0002\u009d\u00a0\u0007?\u0002",
    "\u0002\u009e\u00a0\t\u0005\u0002\u0002\u009f\u0097\u0003\u0002\u0002",
    "\u0002\u009f\u0098\u0003\u0002\u0002\u0002\u009f\u009a\u0003\u0002\u0002",
    "\u0002\u009f\u009c\u0003\u0002\u0002\u0002\u009f\u009e\u0003\u0002\u0002",
    "\u0002\u00a0*\u0003\u0002\u0002\u0002\u00a1\u00a2\t\u0006\u0002\u0002",
    "\u00a2,\u0003\u0002\u0002\u0002\u00a3\u00a4\t\u0007\u0002\u0002\u00a4",
    ".\u0003\u0002\u0002\u0002\u00a5\u00a7\t\b\u0002\u0002\u00a6\u00a5\u0003",
    "\u0002\u0002\u0002\u00a7\u00aa\u0003\u0002\u0002\u0002\u00a8\u00a6\u0003",
    "\u0002\u0002\u0002\u00a8\u00a9\u0003\u0002\u0002\u0002\u00a9\u00ab\u0003",
    "\u0002\u0002\u0002\u00aa\u00a8\u0003\u0002\u0002\u0002\u00ab\u00ac\t",
    "\t\u0002\u0002\u00ac0\u0003\u0002\u0002\u0002\u00ad\u00af\t\n\u0002",
    "\u0002\u00ae\u00ad\u0003\u0002\u0002\u0002\u00af\u00b0\u0003\u0002\u0002",
    "\u0002\u00b0\u00ae\u0003\u0002\u0002\u0002\u00b0\u00b1\u0003\u0002\u0002",
    "\u0002\u00b1\u00b2\u0003\u0002\u0002\u0002\u00b2\u00b3\b\u0019\u0002",
    "\u0002\u00b32\u0003\u0002\u0002\u0002\u00b4\u00b8\u0007%\u0002\u0002",
    "\u00b5\u00b7\n\u000b\u0002\u0002\u00b6\u00b5\u0003\u0002\u0002\u0002",
    "\u00b7\u00ba\u0003\u0002\u0002\u0002\u00b8\u00b6\u0003\u0002\u0002\u0002",
    "\u00b8\u00b9\u0003\u0002\u0002\u0002\u00b9\u00bb\u0003\u0002\u0002\u0002",
    "\u00ba\u00b8\u0003\u0002\u0002\u0002\u00bb\u00bc\b\u001a\u0002\u0002",
    "\u00bc4\u0003\u0002\u0002\u0002\u0011\u0002Zdfhsuw}\u008e\u0095\u009f",
    "\u00a8\u00b0\u00b8\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class logicspecLexer extends antlr4.Lexer {

    static grammarFileName = "logicspec.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", "'==='", "','", "'_'", "'implies'", 
                         "'for'", "'all'", "'exists'", null, null, null, 
                         null, null, null, null, "'not'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, "STRING_LITERAL", "DOUBLE_QUOTED_STRING_LITERAL", 
                          "UNTERMINATED_DOUBLE_QUOTED_STRING_LITERAL", "SINGLE_QUOTED_STRING_LITERAL", 
                          "UNTERMINATED_SINGLE_QUOTED_STRING_LITERAL", "INT", 
                          "DIGIT", "UNARY_LOGICAL_OPERATOR", "LOGICAL_CONSTANT", 
                          "LOGICAL_OPERATOR", "RELATIONAL_OPERATOR", "UNARY_BINARY_ARITHMETIC_OPERATOR", 
                          "ARITHMETIC_OPERATOR", "IDENTIFIER", "WS", "LINE_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "STRING_LITERAL", "DOUBLE_QUOTED_STRING_LITERAL", 
                      "UNTERMINATED_DOUBLE_QUOTED_STRING_LITERAL", "SINGLE_QUOTED_STRING_LITERAL", 
                      "UNTERMINATED_SINGLE_QUOTED_STRING_LITERAL", "INT", 
                      "DIGIT", "UNARY_LOGICAL_OPERATOR", "LOGICAL_CONSTANT", 
                      "LOGICAL_OPERATOR", "RELATIONAL_OPERATOR", "UNARY_BINARY_ARITHMETIC_OPERATOR", 
                      "ARITHMETIC_OPERATOR", "IDENTIFIER", "WS", "LINE_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

logicspecLexer.EOF = antlr4.Token.EOF;
logicspecLexer.T__0 = 1;
logicspecLexer.T__1 = 2;
logicspecLexer.T__2 = 3;
logicspecLexer.T__3 = 4;
logicspecLexer.T__4 = 5;
logicspecLexer.T__5 = 6;
logicspecLexer.T__6 = 7;
logicspecLexer.T__7 = 8;
logicspecLexer.T__8 = 9;
logicspecLexer.STRING_LITERAL = 10;
logicspecLexer.DOUBLE_QUOTED_STRING_LITERAL = 11;
logicspecLexer.UNTERMINATED_DOUBLE_QUOTED_STRING_LITERAL = 12;
logicspecLexer.SINGLE_QUOTED_STRING_LITERAL = 13;
logicspecLexer.UNTERMINATED_SINGLE_QUOTED_STRING_LITERAL = 14;
logicspecLexer.INT = 15;
logicspecLexer.DIGIT = 16;
logicspecLexer.UNARY_LOGICAL_OPERATOR = 17;
logicspecLexer.LOGICAL_CONSTANT = 18;
logicspecLexer.LOGICAL_OPERATOR = 19;
logicspecLexer.RELATIONAL_OPERATOR = 20;
logicspecLexer.UNARY_BINARY_ARITHMETIC_OPERATOR = 21;
logicspecLexer.ARITHMETIC_OPERATOR = 22;
logicspecLexer.IDENTIFIER = 23;
logicspecLexer.WS = 24;
logicspecLexer.LINE_COMMENT = 25;



